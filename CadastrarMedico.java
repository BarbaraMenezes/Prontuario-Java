/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package formulario;

import conexao.Conexao;
import conexao.Criptografia;
import conexao.Medico;
import conexao.Validar_CPF_CNPJ;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Alana
 */
public class CadastrarMedico extends javax.swing.JFrame {

    Conexao conexao;
    Connection con;
    String sql = "select crm,nome,cpf,email,numcelular,datanascimento,senha from medico order by nome,crm";

    /**
     * Creates new form CadastrarMedico
     */
    public CadastrarMedico() {
        initComponents();
    }

    public void PreencherTabela(String sql) {
        try {
            PreparedStatement stmt = con.prepareStatement(sql);

            if (rbCPF.isSelected()) {
                stmt.setString(1, tfCPF.getText());
            } else {
                if (rbNome.isSelected()) {
                    stmt.setString(1, "%" + tfNome.getText() + "%");
                }
            }

            ResultSet rs = stmt.executeQuery();

            DefaultTableModel modelo = (DefaultTableModel) tabela.getModel();
            modelo.setNumRows(0);

            DateFormat data = new SimpleDateFormat("dd/MM/yyyy");

            while (rs.next()) {
                modelo.addRow(new Object[]{
                    rs.getString("nome"),
                    rs.getString("cpf"),
                    rs.getInt("crm"),
                    data.format(rs.getDate("datanascimento")),
                    rs.getString("numcelular"),
                    rs.getString("email"),
                    rs.getString("senha")

                });
            }//fim do while

            rs.close();
            stmt.close();

        } catch (SQLException | NullPointerException ex) {
            System.out.println("ERRO!" + ex.toString());
        }

    }

    public void LimparCampos() {
        tfCRM.setText("");
        tfCPF.setText("");
        tfNumCelular.setText("");
        tfDataNasc.setText("");
        tfEmail.setText("");
        tfNome.setText("");
        pfSenha.setText("");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gpBuPesquisar = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tfCRM = new javax.swing.JFormattedTextField();
        tfCPF = new javax.swing.JFormattedTextField();
        tfDataNasc = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();
        tfNome = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        tfEmail = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        tfNumCelular = new javax.swing.JFormattedTextField();
        buInserir = new javax.swing.JButton();
        buExcluir = new javax.swing.JButton();
        buLimparCampos = new javax.swing.JButton();
        buAlterar = new javax.swing.JButton();
        buPesquisar = new javax.swing.JButton();
        rbCPF = new javax.swing.JRadioButton();
        rbNome = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        pfSenha = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastrar Médico");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel1.setText("CRM");

        jLabel2.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel2.setText("Senha");

        jLabel3.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel3.setText("Data de Nascimento");

        jLabel4.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel4.setText("CPF");

        tfCRM.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        try {
            tfCPF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            tfDataNasc.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel5.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel5.setText("Nome");

        tfNome.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel6.setText("E-Mail");

        tfEmail.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Verdana", 1, 20)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Cadastrar Médico");

        jLabel8.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel8.setText("Celular");

        try {
            tfNumCelular.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)####-#####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        buInserir.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        buInserir.setText("Inserir");
        buInserir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buInserirActionPerformed(evt);
            }
        });

        buExcluir.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        buExcluir.setText("Excluir");
        buExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buExcluirActionPerformed(evt);
            }
        });

        buLimparCampos.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        buLimparCampos.setText("Limpar");
        buLimparCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buLimparCamposActionPerformed(evt);
            }
        });

        buAlterar.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        buAlterar.setText("Alterar");
        buAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buAlterarActionPerformed(evt);
            }
        });

        buPesquisar.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        buPesquisar.setText("Pesquisar");
        buPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buPesquisarActionPerformed(evt);
            }
        });

        gpBuPesquisar.add(rbCPF);
        rbCPF.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        rbCPF.setText("CPF");

        gpBuPesquisar.add(rbNome);
        rbNome.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        rbNome.setText("Nome");

        tabela.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "CPF", "CRM", "Data de Nascimento", "Celular", "Email", "Senha"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabela.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabela);

        pfSenha.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(tfNome, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(tfNumCelular, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 77, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tfDataNasc, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(pfSenha))
                                .addGap(31, 31, 31)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(rbNome)
                                        .addGap(18, 18, 18)
                                        .addComponent(rbCPF))
                                    .addComponent(tfCRM, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))
                                .addGap(20, 20, 20))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(buInserir)
                                        .addGap(58, 58, 58)
                                        .addComponent(buExcluir)
                                        .addGap(62, 62, 62)
                                        .addComponent(buAlterar)
                                        .addGap(62, 62, 62)
                                        .addComponent(buLimparCampos)
                                        .addGap(71, 71, 71)
                                        .addComponent(buPesquisar))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(390, 390, 390)
                                        .addComponent(jLabel4)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel7)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfDataNasc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfCRM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rbNome)
                            .addComponent(rbCPF))
                        .addGap(53, 53, 53)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buInserir)
                            .addComponent(buExcluir)
                            .addComponent(buAlterar)
                            .addComponent(buLimparCampos)
                            .addComponent(buPesquisar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfNumCelular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pfSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        setSize(new java.awt.Dimension(1025, 627));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void buLimparCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buLimparCamposActionPerformed
        LimparCampos();
    }//GEN-LAST:event_buLimparCamposActionPerformed

    private void buInserirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buInserirActionPerformed

        // TODO add your handling code here:
        boolean valido;
        Criptografia criptografia = new Criptografia();
        valido = Validar_CPF_CNPJ.isValid(tfCPF.getText());
        if (valido) {
            Medico medico = new Medico();
            Integer crm;
            String senha;
            crm = Integer.parseInt(tfCRM.getText());
            senha = String.valueOf(pfSenha.getText());
            try {
                medico.Inserir(con, crm, tfNome.getText(), tfCPF.getText(), tfEmail.getText(), tfNumCelular.getText(), tfDataNasc.getText(),criptografia.Criptografar(senha));
                LimparCampos();
                PreencherTabela(sql);
                JOptionPane.showMessageDialog(null, "Médico Cadastrado com Sucesso!", "Cadastro Realizado!", 1);
            } catch (SQLException ex) {
                System.out.println("Erro ao Inserir Dados!" + ex.toString());
            }
        } else {
            JOptionPane.showMessageDialog(null, "CPF Inválido,Por Favor verificar CPF digitado!", "CPF Inválido!", 0);
        }
    }//GEN-LAST:event_buInserirActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        conexao = new Conexao();
        con = conexao.Conectar();
        String sql = "select*from medico order by nome";

        PreencherTabela(sql);

    }//GEN-LAST:event_formWindowOpened

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        conexao.Desconectar();
    }//GEN-LAST:event_formWindowClosing

    private void tabelaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaMouseClicked
        int linha = tabela.getSelectedRow();
        tfNome.setText(tabela.getValueAt(linha, 0).toString());
        tfCPF.setText(tabela.getValueAt(linha, 1).toString());
        tfCRM.setText(tabela.getValueAt(linha, 2).toString());
        tfDataNasc.setText(tabela.getValueAt(linha, 3).toString());
        tfNumCelular.setText(tabela.getValueAt(linha, 4).toString());
        tfEmail.setText(tabela.getValueAt(linha, 5).toString());
        pfSenha.setText(tabela.getValueAt(linha, 6).toString());
    }//GEN-LAST:event_tabelaMouseClicked

    private void buExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buExcluirActionPerformed
        Medico medico = new Medico();
        Integer crm = Integer.parseInt(tfCRM.getText());
        try {
            medico.Excluir(con, crm);
            PreencherTabela(sql);
            LimparCampos();
            JOptionPane.showMessageDialog(null, "Médico Excluído com Sucesso!", "Dados Excluidos!", 1);
        } catch (SQLException ex) {
            Logger.getLogger(CadastrarMedico.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buExcluirActionPerformed

    private void buAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buAlterarActionPerformed
        // TODO add your handling code here:
        Medico medico = new Medico();
        Criptografia criptografia = new Criptografia();
        Integer crm = Integer.parseInt(tfCRM.getText());
        String senha = String.valueOf(pfSenha.getText());

        try {
            medico.Alterar(con, crm, tfNome.getText(), tfCPF.getText(), tfEmail.getText(), tfNumCelular.getText(), tfDataNasc.getText(),criptografia.Criptografar(senha));
            PreencherTabela(sql);
            LimparCampos();
            JOptionPane.showMessageDialog(null, "Dados do médico alterado com Sucesso!", "Dados Alterados!", 1);
        } catch (SQLException ex) {
            Logger.getLogger(CadastrarMedico.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(CadastrarMedico.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buAlterarActionPerformed

    private void buPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buPesquisarActionPerformed
        // TODO add your handling code here:
        String sql = null;

        if (rbCPF.isSelected() || rbNome.isSelected()) {
            if (rbCPF.isSelected()) {
                sql = "select nome,cpf,crm,datanascimento,numcelular,email,senha from medico where cpf=?";
            } else {
                sql = "select nome,cpf,crm,datanascimento,numcelular,email,senha from medico where nome ilike ? order by nome";
            }
        } else {
            JOptionPane.showMessageDialog(null, "Escolher Uma Opção Válida (CPF ou Nome)!", "Erro!", 0);
        }

        PreencherTabela(sql);


    }//GEN-LAST:event_buPesquisarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastrarMedico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastrarMedico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastrarMedico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastrarMedico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastrarMedico().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buAlterar;
    private javax.swing.JButton buExcluir;
    private javax.swing.JButton buInserir;
    private javax.swing.JButton buLimparCampos;
    private javax.swing.JButton buPesquisar;
    private javax.swing.ButtonGroup gpBuPesquisar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField pfSenha;
    private javax.swing.JRadioButton rbCPF;
    private javax.swing.JRadioButton rbNome;
    private javax.swing.JTable tabela;
    private javax.swing.JFormattedTextField tfCPF;
    private javax.swing.JFormattedTextField tfCRM;
    private javax.swing.JFormattedTextField tfDataNasc;
    private javax.swing.JTextField tfEmail;
    private javax.swing.JTextField tfNome;
    private javax.swing.JFormattedTextField tfNumCelular;
    // End of variables declaration//GEN-END:variables
}
